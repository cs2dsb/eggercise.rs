name: Cargo sweep caches

env:
  CARGO_TERM_COLOR: always
  
on:
  # schedule:
  #   - cron: "0 7 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: 🛒 Checkout repo
        uses: actions/checkout@master

      - name: 🔍 Set build suffix 
        run: |
          echo "SUFFIX=$([[ "${{ steps.tag.outputs.tag }}" = "" ]] && echo $GITHUB_SHA || echo ${{ steps.tag.outputs.tag }})" >> $GITHUB_ENV
          DATE=$(date +'%Y-%m-%d_%H%M%S')
          REPO=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}
          
          echo ref_name = ${{  github.ref_name }}
          echo "DATE=$DATE" | tee -a $GITHUB_ENV
          echo "TAG=$([[ "${{ steps.tag.outputs.tag }}" = "" ]] && echo "main_$DATE" || echo "${{ steps.tag.outputs.tag }}")" | tee -a $GITHUB_ENV
          echo "REPO_NAME=$REPO" | tee -a $GITHUB_ENV
          echo "REPO_OWNER=$GITHUB_REPOSITORY_OWNER" | tee -a $GITHUB_ENV
          echo "IMAGE_TAG=${{ env.REGISTRY }}/$GITHUB_REPOSITORY_OWNER/$REPO:$([[ "${{ github.ref }}" == "refs/heads/deploy" ]] && echo "latest" || echo "main")" | tee -a $GITHUB_ENV
          echo "IMAGE_NAME=$REPO" | tee -a $GITHUB_ENV

      - name: 🎯 Cache target dir (restore)
        id: cache
        uses: actions/cache@v4
        with:
          key: ${{ env.REPO_NAME }}_target_cache-${{ hashFiles('**/Cargo.toml') }}
          path: |
            target
            cargo_home
          restore-keys: |
            ${{ env.REPO_NAME }}_target_cache-

      - name: 💉 Inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "target": "/server/target",
              "cargo_home": "/cargo_home"
            }

      - name: 🧹 Sweep caches
        run: |
          docker build . \
            -f ./docker/sweeper/Dockerfile
            