[package]
name = "shared"
edition.workspace = true
version.workspace = true

[features]
backend = [ 
    "rusqlite/serde_json", 
    "serde_json", 
    "exemplar", 
    "sea-query", 
    "sea-query-rusqlite", 
    "uuid/v4", 
    "webauthn-rs", 
    "axum", 
    "deadpool-sqlite", 

    "sea-query-enum", 
    "exemplar-model",
]
frontend = [ 
    "web-sys", 
    "wasm-bindgen", 
    "gloo-net", 
    "leptos", 
    "exemplar", 
    "sea-query", 

    "sea-query-enum",
]
build = [ "anyhow" ]

# These exist to remove the any(frontend, backend) scattered through the code
# Enable sea query enum derives
sea-query-enum = []
# Enable the examplar model derive for from_row
exemplar-model = [
    "rusqlite/chrono",
    "rusqlite/uuid",
]

[dependencies]
tracing.workspace = true
tracing-subscriber.workspace = true
dotenv.workspace = true
cargo_toml.workspace = true
chrono.workspace = true
serde.workspace = true
thiserror.workspace = true
const_format.workspace = true
webauthn-rs-proto.workspace = true
http.workspace = true
serde_with.workspace = true
http-serde.workspace = true

percent-encoding = "2.3.1"
anyhow = { workspace = true, optional = true }
deadpool-sqlite = { workspace = true, optional = true }
leptos = { workspace = true, optional = true }
wasm-bindgen = { workspace = true, optional = true }
gloo-net = { workspace = true, optional = true }
web-sys = { workspace = true, optional = true }
axum = { workspace = true, optional = true }
rusqlite = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
sea-query = { workspace = true, optional = true }
sea-query-rusqlite = { workspace = true, optional = true }
webauthn-rs = { workspace = true, optional = true }
exemplar = { version = "0.9.0", optional = true }
uuid = { version = "1.0", features = [ "serde" ] }